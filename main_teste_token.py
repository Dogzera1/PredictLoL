#!/usr/bin/env python3
"""
Vers√£o de teste do main.py com token correto
"""
import os
import sys
import asyncio
import logging

# For√ßa o token correto ANTES de qualquer importa√ß√£o
os.environ["TELEGRAM_BOT_TOKEN"] = "7584060058:AAHiZkgr-TFlbt8Ym1GNFMdvjfVa6oED9l8"
os.environ["TELEGRAM_ADMIN_USER_IDS"] = "8012415611"

print("üîß Token for√ßado no in√≠cio:", os.environ["TELEGRAM_BOT_TOKEN"][:20] + "...")

# Importa apenas ap√≥s definir as vari√°veis
from bot.utils.constants import TELEGRAM_CONFIG

# Verifica se est√° usando o token correto
print("üîç Token nas constantes:", TELEGRAM_CONFIG["bot_token"][:20] + "...")

# Simula o mesmo processo do main.py original
bot_token = os.getenv("TELEGRAM_BOT_TOKEN", TELEGRAM_CONFIG["bot_token"])
print("‚úÖ Token final escolhido:", bot_token[:20] + "...")

# Teste r√°pido de conex√£o
async def test_connection():
    try:
        from telegram.ext import Application
        
        app = Application.builder().token(bot_token).build()
        await app.initialize()
        
        # Testa getMe
        bot_info = await app.bot.get_me()
        print(f"üéâ BOT CONECTADO: @{bot_info.username}")
        print(f"üìù Nome: {bot_info.first_name}")
        
        await app.shutdown()
        return True
        
    except Exception as e:
        print(f"‚ùå ERRO: {e}")
        return False

# Executa teste
if __name__ == "__main__":
    print("\n" + "="*50)
    print("üöÄ TESTANDO CONEX√ÉO COM TOKEN CORRETO")
    print("="*50)
    
    result = asyncio.run(test_connection())
    
    if result:
        print("\n‚úÖ TOKEN FUNCIONANDO PERFEITAMENTE!")
        print("üî• Pode iniciar o sistema principal com seguran√ßa")
        
        # Pergunta se quer iniciar o sistema completo
        print("\n‚ö° Iniciando sistema principal automaticamente em 3 segundos...")
        print("   Pressione Ctrl+C para cancelar")
        
        try:
            import time
            time.sleep(3)
            
            # Remove este arquivo de teste e executa o main real
            print("\nüöÄ INICIANDO SISTEMA PRINCIPAL...")
            
            # Importa e executa o sistema completo
            exec(open("main.py").read())
            
        except KeyboardInterrupt:
            print("\n‚èπÔ∏è Cancelado pelo usu√°rio")
            
    else:
        print("\n‚ùå PROBLEMA COM O TOKEN!")
        sys.exit(1) 