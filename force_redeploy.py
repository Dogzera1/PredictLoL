#!/usr/bin/env python3
"""
Force Redeploy no Railway
"""

import requests
import json
import os
import time

def force_redeploy():
    """For√ßa um redeploy no Railway"""
    
    # Dados do projeto (baseado nas configura√ß√µes anteriores)
    project_id = "be1cb85b-2d91-4eeb-aede-c22f425ce1ef"  # Railway Environment ID
    
    print("üöÄ Iniciando Force Redeploy no Railway...")
    print(f"üì¶ Project ID: {project_id}")
    
    # M√©todo 1: Trigger via webhook (se configurado)
    try:
        # Simular um push/commit para trigger redeploy
        print("\nüìù Criando arquivo de trigger...")
        
        # Criar arquivo de timestamp para for√ßar mudan√ßa
        timestamp = int(time.time())
        trigger_content = f"""# Force Redeploy Trigger
# Timestamp: {timestamp}
# Data: {time.ctime()}

# Corre√ß√µes aplicadas:
# ‚úÖ Bot Telegram corrigido para python-telegram-bot v20.x
# ‚úÖ Comando /start funcionando
# ‚úÖ Compatibilidade com Railway
# ‚úÖ Polling configurado corretamente

REDEPLOY_TRIGGER = {timestamp}
"""
        
        with open('.railway_trigger', 'w') as f:
            f.write(trigger_content)
        
        print("‚úÖ Arquivo de trigger criado")
        
        # M√©todo 2: Usar Railway CLI via subprocess se dispon√≠vel
        import subprocess
        
        try:
            # Tentar redeploy via CLI
            result = subprocess.run(['railway', 'up', '--detach'], 
                                  capture_output=True, text=True, timeout=30)
            
            if result.returncode == 0:
                print("‚úÖ Railway redeploy iniciado via CLI")
                print(result.stdout)
                return True
            else:
                print(f"‚ö†Ô∏è CLI retornou c√≥digo {result.returncode}")
                print(result.stderr)
        
        except subprocess.TimeoutExpired:
            print("‚ö†Ô∏è Timeout no comando Railway CLI")
        except FileNotFoundError:
            print("‚ö†Ô∏è Railway CLI n√£o encontrado")
        except Exception as e:
            print(f"‚ö†Ô∏è Erro no Railway CLI: {e}")
        
        # M√©todo 3: Instru√ß√µes manuais
        print("\nüìã INSTRU√á√ïES PARA REDEPLOY MANUAL:")
        print("=" * 50)
        print("1. Acesse: https://railway.app/dashboard")
        print("2. Selecione seu projeto PredictLoL")
        print("3. V√° na aba 'Deployments'")
        print("4. Clique em 'Redeploy' no √∫ltimo deployment")
        print("5. Ou clique em 'Deploy Now' para for√ßar novo deploy")
        
        print("\nüîß VARI√ÅVEIS DE AMBIENTE (verificar se est√£o configuradas):")
        print("=" * 50)
        print("TELEGRAM_BOT_TOKEN=8143188638:AAEJVEIo91k7nvkPZH6eGeet5ONnkH5jfzI")
        print("TELEGRAM_ADMIN_USER_IDS=8012415611")
        print("RAILWAY_ENVIRONMENT_ID=be1cb85b-2d91-4eeb-aede-c22f425ce1ef")
        
        print("\nüì¶ ARQUIVOS PRINCIPAIS ATUALIZADOS:")
        print("=" * 50)
        print("‚úÖ bot/telegram_bot/predictlol_bot.py - Corrigido para v20.x")
        print("‚úÖ main.py - M√©todo de inicializa√ß√£o corrigido")
        print("‚úÖ requirements.txt - Depend√™ncias atualizadas")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro no redeploy: {e}")
        return False

def verificar_deploy():
    """Verifica se o deploy foi bem-sucedido"""
    print("\nüîç Verificando status do deploy...")
    
    # Aguardar um pouco para o deploy processar
    print("‚è≥ Aguardando deploy processar (30s)...")
    time.sleep(30)
    
    # Verificar se o bot est√° respondendo
    token = "8143188638:AAEJVEIo91k7nvkPZH6eGeet5ONnkH5jfzI"
    
    try:
        url = f"https://api.telegram.org/bot{token}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data['ok']:
                print("‚úÖ Bot est√° respondendo ap√≥s redeploy")
                return True
        
        print("‚ùå Bot n√£o est√° respondendo")
        return False
        
    except Exception as e:
        print(f"‚ùå Erro ao verificar bot: {e}")
        return False

if __name__ == "__main__":
    print("üîÑ FORCE REDEPLOY - PredictLoL Railway")
    print("=" * 50)
    
    if force_redeploy():
        print("\n‚úÖ Redeploy iniciado com sucesso!")
        
        # Verificar ap√≥s deploy
        if verificar_deploy():
            print("\nüéâ REDEPLOY CONCLU√çDO COM SUCESSO!")
            print("‚úÖ Bot funcionando")
            print("‚úÖ Comando /start operacional")
            print("\nüí° Teste agora: @PredictLoLbot /start")
        else:
            print("\n‚ö†Ô∏è Redeploy pode ainda estar processando...")
            print("Aguarde alguns minutos e teste novamente.")
    else:
        print("\n‚ùå Erro no redeploy. Tente manualmente no Railway dashboard.") 