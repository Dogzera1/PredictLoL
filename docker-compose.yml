version: '3.8'

services:
  # ü§ñ Bot Principal
  lol-bot:
    build: .
    container_name: lol-predictor-v3
    restart: unless-stopped
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///data/bot.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
    networks:
      - bot-network
    depends_on:
      - redis
      - nginx
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üìä Redis para Cache
  redis:
    image: redis:7-alpine
    container_name: lol-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-botpassword}
    volumes:
      - redis-data:/data
    networks:
      - bot-network
    ports:
      - "6379:6379"

  # üåê Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lol-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    networks:
      - bot-network
    depends_on:
      - lol-bot

  # üìä Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: lol-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - bot-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # üìà Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: lol-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - bot-network

  # üíæ Backup Service
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: lol-backup
    restart: unless-stopped
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - RETENTION_DAYS=30
    volumes:
      - ./data:/app/data:ro
      - ./backups:/app/backups
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - bot-network
    depends_on:
      - lol-bot

networks:
  bot-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: 