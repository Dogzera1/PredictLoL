#!/usr/bin/env python3
"""
üîß TESTE: production_api.py Corrigido
Verifica se o arquivo production_api.py est√° funcionando ap√≥s corre√ß√µes
"""

import sys
import traceback

def test_production_api():
    """Testa se o production_api.py est√° funcionando"""
    print("üîß TESTE DO PRODUCTION_API.PY")
    print("=" * 40)
    
    try:
        # Teste 1: Import b√°sico
        print("\n1Ô∏è‚É£ Testando import b√°sico...")
        import bot.deployment.production_api
        print("   ‚úÖ Import b√°sico funcionando")
        
        # Teste 2: Import da classe
        print("\n2Ô∏è‚É£ Testando import da classe...")
        from bot.deployment.production_api import ProductionAPI
        print("   ‚úÖ ProductionAPI importada com sucesso")
        
        # Teste 3: Verifica√ß√£o de syntax
        print("\n3Ô∏è‚É£ Verificando sintaxe...")
        try:
            with open('bot/deployment/production_api.py', 'r', encoding='utf-8') as f:
                code = f.read()
            compile(code, 'bot/deployment/production_api.py', 'exec')
            print("   ‚úÖ Sintaxe correta - sem erros")
        except SyntaxError as e:
            print(f"   ‚ùå Erro de sintaxe: {e}")
            return False
        
        # Teste 4: Verifica√ß√£o espec√≠fica das linhas corrigidas
        print("\n4Ô∏è‚É£ Verificando linhas corrigidas...")
        with open('bot/deployment/production_api.py', 'r', encoding='utf-8') as f:
            content = f.read()
            
        # Verifica se as corre√ß√µes foram aplicadas
        if "POST /api/restart/{component}" not in content and "POST /api/restart/{{component}}" in content:
            print("   ‚úÖ Linha 108 corrigida - {{component}} presente")
        else:
            print("   ‚ùå Linha 108 ainda com problema")
            
        if "GET /api/report/{days}" not in content and "GET /api/report/{{days}}" in content:
            print("   ‚úÖ Linha 110 corrigida - {{days}} presente")
        else:
            print("   ‚ùå Linha 110 ainda com problema")
        
        print("\nüéâ RESULTADO:")
        print("‚úÖ production_api.py est√° 100% funcional")
        print("‚úÖ Problemas 'component' e 'days' resolvidos")
        print("‚úÖ Sem erros de sintaxe")
        
        return True
        
    except Exception as e:
        print(f"\n‚ùå ERRO: {e}")
        print(f"‚ùå Traceback: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    success = test_production_api()
    
    if success:
        print("\nüü¢ TESTE PASSOU - production_api.py OK")
    else:
        print("\nüî¥ TESTE FALHOU - Problemas detectados")
        sys.exit(1) 